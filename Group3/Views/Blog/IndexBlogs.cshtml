@model IEnumerable<Lib.Blogs>


<!DOCTYPE html>

<html>
<div class="container">
    <div class="row d-flex">
        @foreach (var item in Model)
            {
        <div class="col-md-4 d-flex ftco-animate">
            <div class="blog-entry align-self-stretch">
                <a href="#" class="block-20 rounded">
                        <img src="@Url.Content("~/images/Blogs/" + item.Photo)" alt="@item.Title" class="img-fluid image">
                </a>
                <div class="text mt-3">
                    <div class="meta mb-2">
                        <div><a href="#">@item.PublishDate</a></div>
                        <div><a href="#">Admin</a></div>
                        <div><a href="#" class="meta-chat"><span class="fa fa-comment"></span> Số comment</a></div>
                    </div>
                    <h3 class="heading"><a href="#">@item.Summary</a></h3>
                </div>
            </div>
        </div>
        }
    </div>
    <div class="row mt-5">
        <div class="col text-center">
            <div class="block-27">
                <ul>
                    <li><a href="#">&lt;</a></li>
                    <li class="active"><span>1</span></li>
                    <li><a href="#">2</a></li>
                    <li><a href="#">3</a></li>
                    <li><a href="#">4</a></li>
                    <li><a href="#">5</a></li>
                    <li><a href="#">&gt;</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

</html>
@functions {
    public string TruncateText(string text, int maxLength)
    {
        if (text.Length > maxLength)
        {
            return text.Substring(0, maxLength) + "...";
        }
        return text;
    }
}